<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pb1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MiuHvGZ0wJlOdrbTne+EZzzleZqAAAA7
</value>
  </data>
</root>